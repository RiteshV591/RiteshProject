=== Declarations in JS ===

* Three kinds of variable declaration

* always declare variables before use.

1. Var - used in all JavaScript code from 1995 to 2015. Only use var if you MUST support old browsers.

- variable declared with "var" are always have global scope and can be accesed from outside the block

Ex. 

var x = 5;
var y = 6;
var z = x + y;

2. let - added new in ES6(2015).

- have Block Scope, Must be declare first, cannot be redeclared in same scope, not hoisted.

- block scope means Variables declared inside a { } block cannot be accessed from outside the block

{
  let x = 2;
}
// x can NOT be used here

- With "let" you can not redeclare a variable but with "var" you can.

let x = "John Doe";

let x = 0; // ERROR


3. Const - added new in ES6(2015).

- cannot be Redeclared, cannot be reassigned, have blocked scope.

const PI = 3.141592653589793;
PI = 3.14; // ERROR

- must be assigned first

const PI = 3.14159265359; //correct

const PI;
PI = 3.14159265359; //ERROR

- Used only when you know that the value should not be changed.


===== Data Types in JS =========

**=== Primitive Data Types (7 types - String, Number, Boolean, Null, Undefined, Symbol, BigInt) ===

1. Number 

- stored as decimal numbers (floating point). Numbers can be written with, or without decimals

ex. const score = 100, const = 100.3  // both are called numbers

2. String

- is a series of characters like "John Doe". Strings are written with quotes. You can use single '' or double "" quotes.

// Using double quotes:
let carName1 = "Volvo XC60";

// Using single quotes:
let carName2 = 'Volvo XC60';


3. BigInt (added in ES2020)

- are stored in a a 64-bit floating-point format.
- used to store integer values that are too big to be represented by a normal JavaScript Number.

// Example
let x = BigInt("123456789012345678901234567890");

4. Booleans

- Booleans can only have two values: true or false.

let x = 5;
let y = 5;
let z = 6;
(x == y)       // Returns true
(x == z)       // Returns false

5. Undefined

- a variable without a value, has the value undefined. The type is also undefined.

let car;    // Value is undefined, type is undefined

- Any variable can be emptied, by setting the value to undefined. The type will also be undefined.


car = undefined;    // Value is undefined, type is undefined


6. Null 

- having no value

var x1 = null;
console.log(typeof(x1)); // Null



7. Symbol 

- Symbols are often used to add unique property keys to an object

// Every Symbol() call is guaranteed to return a unique Symbol.

const sym1 = Symbol();
const sym2 = Symbol("foo");
const sym3 = Symbol("foo");

Symbol("foo") === Symbol("foo"); // false




=== Reference Data Types(Non-primitive) - (3 types - Arrays, Objects, Function) ===


I want to show a notification for 3 seconds on adding a task but not as a prompt i want a text that appears from bottom when i add a task and says "New task Added : task name"
